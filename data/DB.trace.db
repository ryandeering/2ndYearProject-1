2019-04-14 00:15:39 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-197]
2019-04-15 20:24:56 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "CONTENT VARCHAR(255)": "'omg im crying omg im crying omg im crying omg im crying omg im crying omg im crying omg im crying omg im crying omg im crying o... (1582)"; SQL statement:
insert into review (date, rating, content, customer_email, product_id) values (?,?,?,?,?) [22001-197]
2019-04-15 20:38:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "NAME VARCHAR(255)": "'fcfdsssssssssssssssssssssSDjhakjDFAHO@SFHOUAHFUO@WHAOUFWSHUO:WFHO:UHWFOfcfdsssssssssssssssssssssSDjhakjDFAHO@SFHOUAHFUO@WHAOUFW... (2556)"; SQL statement:
insert into product (name, description, stock, price, developer, publisher, platform_id) values (?,?,?,?,?,?,?) [22001-197]
2019-04-15 20:45:32 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "NAME VARCHAR(255)": "'fcfdsssssssssssssssssssssSDjhakjDFAHO@SFHOUAHFUO@WHAOUFWSHUO:WFHO:UHWFOfcfdsssssssssssssssssssssSDjhakjDFAHO@SFHOUAHFUO@WHAOUFW... (2556)"; SQL statement:
insert into product (name, description, stock, price, developer, publisher, platform_id) values (?,?,?,?,?,?,?) [22001-197]
2019-04-15 20:46:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "STREET_ADDRESS VARCHAR(255)": "'ColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColepar... (536)"; SQL statement:
update ADDRESS set f_name=?, l_name=?, street_address=?, town=?, eircode=?, country=? where id=? [22001-197]
2019-04-15 20:46:49 jdbc[3]: exception
org.h2.jdbc.JdbcBatchUpdateException: Value too long for column "STREET_ADDRESS VARCHAR(255)": "'ColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColepar... (536)"; SQL statement:
update ADDRESS set f_name=?, l_name=?, street_address=?, town=?, eircode=?, country=? where id=? [22001-197]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1295)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at io.ebeaninternal.server.persist.BatchedPstmt.executeAndCheckRowCounts(BatchedPstmt.java:103)
	at io.ebeaninternal.server.persist.BatchedPstmt.executeBatch(BatchedPstmt.java:77)
	at io.ebeaninternal.server.persist.BatchedPstmtHolder.flush(BatchedPstmtHolder.java:93)
	at io.ebeaninternal.server.persist.BatchControl.flushPstmtHolder(BatchControl.java:199)
	at io.ebeaninternal.server.persist.BatchControl.executeNow(BatchControl.java:213)
	at io.ebeaninternal.server.persist.BatchedBeanHolder.executeNow(BatchedBeanHolder.java:92)
	at io.ebeaninternal.server.persist.BatchControl.flush(BatchControl.java:263)
	at io.ebeaninternal.server.persist.BatchControl.flushReset(BatchControl.java:227)
	at io.ebeaninternal.server.transaction.JdbcTransaction.batchFlushReset(JdbcTransaction.java:642)
	at io.ebeaninternal.server.transaction.JdbcTransaction.flushBatchOnCascade(JdbcTransaction.java:662)
	at io.ebeaninternal.server.core.PersistRequestBean.flushBatchOnCascade(PersistRequestBean.java:234)
	at io.ebeaninternal.server.persist.DefaultPersister.update(DefaultPersister.java:376)
	at io.ebeaninternal.server.persist.DefaultPersister.save(DefaultPersister.java:391)
	at io.ebeaninternal.server.core.DefaultServer.save(DefaultServer.java:1578)
	at io.ebeaninternal.server.core.DefaultServer.save(DefaultServer.java:1570)
	at io.ebean.Model.save(Model.java:190)
	at controllers.HomeController.changeAddressSubmit(HomeController.java:463)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$108(Routes.scala:1434)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.db.ebean.TransactionalAction.lambda$call$6(TransactionalAction.java:18)
	at io.ebeaninternal.server.core.DefaultServer.execute(DefaultServer.java:670)
	at io.ebeaninternal.server.core.DefaultServer.execute(DefaultServer.java:663)
	at io.ebean.Ebean.execute(Ebean.java:1270)
	at play.db.ebean.TransactionalAction.call(TransactionalAction.java:18)
	at play.mvc.Security$AuthenticatedAction.call(Security.java:69)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:658)
	at scala.util.Success.$anonfun$map$1(Try.scala:255)
	at scala.util.Success.map(Try.scala:213)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:72)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:372)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:371)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:379)
	at scala.concurrent.impl.Promise.transform(Promise.scala:33)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:31)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:379)
	at scala.concurrent.Future.map(Future.scala:292)
	at scala.concurrent.Future.map$(Future.scala:292)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:379)
	at scala.concurrent.Future$.apply(Future.scala:658)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:307)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:41)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:85)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
org.h2.jdbc.JdbcSQLException: Value too long for column "STREET_ADDRESS VARCHAR(255)": "'ColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColeparkColepar... (536)"; SQL statement:
update ADDRESS set f_name=?, l_name=?, street_address=?, town=?, eircode=?, country=? where id=? [22001-197]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:357)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:398)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:798)
	at org.h2.command.dml.Update.update(Update.java:157)
	at org.h2.command.CommandContainer.update(CommandContainer.java:102)
	at org.h2.command.Command.executeUpdate(Command.java:261)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:199)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1277)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at io.ebeaninternal.server.persist.BatchedPstmt.executeAndCheckRowCounts(BatchedPstmt.java:103)
	at io.ebeaninternal.server.persist.BatchedPstmt.executeBatch(BatchedPstmt.java:77)
	at io.ebeaninternal.server.persist.BatchedPstmtHolder.flush(BatchedPstmtHolder.java:93)
	at io.ebeaninternal.server.persist.BatchControl.flushPstmtHolder(BatchControl.java:199)
	at io.ebeaninternal.server.persist.BatchControl.executeNow(BatchControl.java:213)
	at io.ebeaninternal.server.persist.BatchedBeanHolder.executeNow(BatchedBeanHolder.java:92)
	at io.ebeaninternal.server.persist.BatchControl.flush(BatchControl.java:263)
	at io.ebeaninternal.server.persist.BatchControl.flushReset(BatchControl.java:227)
	at io.ebeaninternal.server.transaction.JdbcTransaction.batchFlushReset(JdbcTransaction.java:642)
	at io.ebeaninternal.server.transaction.JdbcTransaction.flushBatchOnCascade(JdbcTransaction.java:662)
	at io.ebeaninternal.server.core.PersistRequestBean.flushBatchOnCascade(PersistRequestBean.java:234)
	at io.ebeaninternal.server.persist.DefaultPersister.update(DefaultPersister.java:376)
	at io.ebeaninternal.server.persist.DefaultPersister.save(DefaultPersister.java:391)
	at io.ebeaninternal.server.core.DefaultServer.save(DefaultServer.java:1578)
	at io.ebeaninternal.server.core.DefaultServer.save(DefaultServer.java:1570)
	at io.ebean.Model.save(Model.java:190)
	at controllers.HomeController.changeAddressSubmit(HomeController.java:463)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$108(Routes.scala:1434)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:134)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:133)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:108)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:88)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at play.db.ebean.TransactionalAction.lambda$call$6(TransactionalAction.java:18)
	at io.ebeaninternal.server.core.DefaultServer.execute(DefaultServer.java:670)
	at io.ebeaninternal.server.core.DefaultServer.execute(DefaultServer.java:663)
	at io.ebean.Ebean.execute(Ebean.java:1270)
	at play.db.ebean.TransactionalAction.call(TransactionalAction.java:18)
	at play.mvc.Security$AuthenticatedAction.call(Security.java:69)
	at play.core.j.JavaAction.$anonfun$apply$8(JavaAction.scala:138)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:658)
	at scala.util.Success.$anonfun$map$1(Try.scala:255)
	at scala.util.Success.map(Try.scala:213)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:292)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:72)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:372)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:371)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:379)
	at scala.concurrent.impl.Promise.transform(Promise.scala:33)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:31)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:379)
	at scala.concurrent.Future.map(Future.scala:292)
	at scala.concurrent.Future.map$(Future.scala:292)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:379)
	at scala.concurrent.Future$.apply(Future.scala:658)
	at play.core.j.JavaAction.apply(JavaAction.scala:138)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:307)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:41)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:85)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:44)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2019-04-15 22:11:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "F_NAME VARCHAR(255)": "'dsaakjdshikafjaofOIAESJFEK~OIJEFjipdsaakjdshikafjaofOIAESJFEK~OIJEFjipdsaakjdshikafjaofOIAESJFEK~OIJEFjipdsaakjdshikafjaofOIAES... (7168)"; SQL statement:
insert into ADDRESS (f_name, l_name, street_address, town, eircode, country) values (?,?,?,?,?,?) [22001-197]
2019-04-15 22:14:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "F_NAME VARCHAR(255)": "'dsaakjdshikafjaofOIAESJFEK~OIJEFjipdsaakjdshikafjaofOIAESJFEK~OIJEFjipdsaakjdshikafjaofOIAESJFEK~OIJEFjipdsaakjdshikafjaofOIAES... (7168)"; SQL statement:
insert into ADDRESS (f_name, l_name, street_address, town, eircode, country) values (?,?,?,?,?,?) [22001-197]
2019-04-15 22:17:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Value too long for column "F_NAME VARCHAR(255)": "'dsaakjdshikafjaofOIAESJFEK~OIJEFjipdsaakjdshikafjaofOIAESJFEK~OIJEFjipdsaakjdshikafjaofOIAESJFEK~OIJEFjipdsaakjdshikafjaofOIAES... (5120)"; SQL statement:
insert into ADDRESS (f_name, l_name, street_address, town, eircode, country) values (?,?,?,?,?,?) [22001-197]
